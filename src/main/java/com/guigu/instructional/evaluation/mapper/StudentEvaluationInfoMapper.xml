<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guigu.instructional.evaluation.mapper.StudentEvaluationInfoMapper" >
  <resultMap id="BaseResultMap" type="com.guigu.instructional.po.StudentEvaluationInfo" >
    <id column="student_evaluation_id" property="studentEvaluationId" jdbcType="INTEGER" />
    <result column="staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="student_evaluation_class_content" property="studentEvaluationClassContent" jdbcType="VARCHAR" />
    <result column="student_evaluation_class_activity" property="studentEvaluationClassActivity" jdbcType="VARCHAR" />
    <result column="student_evaluation_answer_patiently" property="studentEvaluationAnswerPatiently" jdbcType="VARCHAR" />
    <result column="student_evaluation_extra_evaluate" property="studentEvaluationExtraEvaluate" jdbcType="VARCHAR" />
    <result column="student_evaluation_state" property="studentEvaluationState" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    student_evaluation_id, staff_id, staff_name, student_id, student_name, course_id, 
    course_name, student_evaluation_class_content, student_evaluation_class_activity, 
    student_evaluation_answer_patiently, student_evaluation_extra_evaluate, student_evaluation_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guigu.instructional.po.StudentEvaluationInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_evaluation_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_evaluation_info
    where student_evaluation_id = #{studentEvaluationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_evaluation_info
    where student_evaluation_id = #{studentEvaluationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guigu.instructional.po.StudentEvaluationInfoExample" >
    delete from student_evaluation_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guigu.instructional.po.StudentEvaluationInfo" >
    insert into student_evaluation_info (student_evaluation_id, staff_id, staff_name, 
      student_id, student_name, course_id, 
      course_name, student_evaluation_class_content, 
      student_evaluation_class_activity, student_evaluation_answer_patiently, 
      student_evaluation_extra_evaluate, student_evaluation_state
      )
    values (#{studentEvaluationId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{staffName,jdbcType=VARCHAR}, 
      #{studentId,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER}, 
      #{courseName,jdbcType=VARCHAR}, #{studentEvaluationClassContent,jdbcType=VARCHAR}, 
      #{studentEvaluationClassActivity,jdbcType=VARCHAR}, #{studentEvaluationAnswerPatiently,jdbcType=VARCHAR}, 
      #{studentEvaluationExtraEvaluate,jdbcType=VARCHAR}, #{studentEvaluationState,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guigu.instructional.po.StudentEvaluationInfo" >
    insert into student_evaluation_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentEvaluationId != null" >
        student_evaluation_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="staffName != null" >
        staff_name,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="studentEvaluationClassContent != null" >
        student_evaluation_class_content,
      </if>
      <if test="studentEvaluationClassActivity != null" >
        student_evaluation_class_activity,
      </if>
      <if test="studentEvaluationAnswerPatiently != null" >
        student_evaluation_answer_patiently,
      </if>
      <if test="studentEvaluationExtraEvaluate != null" >
        student_evaluation_extra_evaluate,
      </if>
      <if test="studentEvaluationState != null" >
        student_evaluation_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentEvaluationId != null" >
        #{studentEvaluationId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null" >
        #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationClassContent != null" >
        #{studentEvaluationClassContent,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationClassActivity != null" >
        #{studentEvaluationClassActivity,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationAnswerPatiently != null" >
        #{studentEvaluationAnswerPatiently,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationExtraEvaluate != null" >
        #{studentEvaluationExtraEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationState != null" >
        #{studentEvaluationState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guigu.instructional.po.StudentEvaluationInfoExample" resultType="java.lang.Integer" >
    select count(*) from student_evaluation_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student_evaluation_info
    <set >
      <if test="record.studentEvaluationId != null" >
        student_evaluation_id = #{record.studentEvaluationId,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.staffName != null" >
        staff_name = #{record.staffName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentEvaluationClassContent != null" >
        student_evaluation_class_content = #{record.studentEvaluationClassContent,jdbcType=VARCHAR},
      </if>
      <if test="record.studentEvaluationClassActivity != null" >
        student_evaluation_class_activity = #{record.studentEvaluationClassActivity,jdbcType=VARCHAR},
      </if>
      <if test="record.studentEvaluationAnswerPatiently != null" >
        student_evaluation_answer_patiently = #{record.studentEvaluationAnswerPatiently,jdbcType=VARCHAR},
      </if>
      <if test="record.studentEvaluationExtraEvaluate != null" >
        student_evaluation_extra_evaluate = #{record.studentEvaluationExtraEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="record.studentEvaluationState != null" >
        student_evaluation_state = #{record.studentEvaluationState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student_evaluation_info
    set student_evaluation_id = #{record.studentEvaluationId,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      staff_name = #{record.staffName,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=INTEGER},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      student_evaluation_class_content = #{record.studentEvaluationClassContent,jdbcType=VARCHAR},
      student_evaluation_class_activity = #{record.studentEvaluationClassActivity,jdbcType=VARCHAR},
      student_evaluation_answer_patiently = #{record.studentEvaluationAnswerPatiently,jdbcType=VARCHAR},
      student_evaluation_extra_evaluate = #{record.studentEvaluationExtraEvaluate,jdbcType=VARCHAR},
      student_evaluation_state = #{record.studentEvaluationState,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guigu.instructional.po.StudentEvaluationInfo" >
    update student_evaluation_info
    <set >
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null" >
        staff_name = #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationClassContent != null" >
        student_evaluation_class_content = #{studentEvaluationClassContent,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationClassActivity != null" >
        student_evaluation_class_activity = #{studentEvaluationClassActivity,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationAnswerPatiently != null" >
        student_evaluation_answer_patiently = #{studentEvaluationAnswerPatiently,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationExtraEvaluate != null" >
        student_evaluation_extra_evaluate = #{studentEvaluationExtraEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="studentEvaluationState != null" >
        student_evaluation_state = #{studentEvaluationState,jdbcType=VARCHAR},
      </if>
    </set>
    where student_evaluation_id = #{studentEvaluationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guigu.instructional.po.StudentEvaluationInfo" >
    update student_evaluation_info
    set staff_id = #{staffId,jdbcType=INTEGER},
      staff_name = #{staffName,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      student_name = #{studentName,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      course_name = #{courseName,jdbcType=VARCHAR},
      student_evaluation_class_content = #{studentEvaluationClassContent,jdbcType=VARCHAR},
      student_evaluation_class_activity = #{studentEvaluationClassActivity,jdbcType=VARCHAR},
      student_evaluation_answer_patiently = #{studentEvaluationAnswerPatiently,jdbcType=VARCHAR},
      student_evaluation_extra_evaluate = #{studentEvaluationExtraEvaluate,jdbcType=VARCHAR},
      student_evaluation_state = #{studentEvaluationState,jdbcType=VARCHAR}
    where student_evaluation_id = #{studentEvaluationId,jdbcType=INTEGER}
  </update>
</mapper>