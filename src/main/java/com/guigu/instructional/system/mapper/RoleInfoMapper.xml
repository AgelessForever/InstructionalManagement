<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guigu.instructional.system.mapper.RoleInfoMapper" >
  <resultMap id="BaseResultMap" type="com.guigu.instructional.po.RoleInfo" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="role_state" property="roleState" jdbcType="VARCHAR" />
    <result column="role_anthorty_one" property="roleAnthortyOne" jdbcType="INTEGER" />
    <result column="role_anthorty_two" property="roleAnthortyTwo" jdbcType="INTEGER" />
    <result column="role_anthorty_three" property="roleAnthortyThree" jdbcType="INTEGER" />
    <result column="role_anthorty_four" property="roleAnthortyFour" jdbcType="INTEGER" />
    <result column="role_anthorty_five" property="roleAnthortyFive" jdbcType="INTEGER" />
    <result column="role_anthorty_six" property="roleAnthortySix" jdbcType="INTEGER" />
    <result column="role_anthorty_seven" property="roleAnthortySeven" jdbcType="INTEGER" />
    <result column="role_anthorty_eight" property="roleAnthortyEight" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, role_name, role_desc, role_state, role_anthorty_one, role_anthorty_two, 
    role_anthorty_three, role_anthorty_four, role_anthorty_five, role_anthorty_six, role_anthorty_seven, 
    role_anthorty_eight
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guigu.instructional.po.RoleInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guigu.instructional.po.RoleInfoExample" >
    delete from role_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guigu.instructional.po.RoleInfo" >
    insert into role_info (role_id, role_name, role_desc, 
      role_state, role_anthorty_one, role_anthorty_two, 
      role_anthorty_three, role_anthorty_four, role_anthorty_five, 
      role_anthorty_six, role_anthorty_seven, role_anthorty_eight
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{roleState,jdbcType=VARCHAR}, #{roleAnthortyOne,jdbcType=INTEGER}, #{roleAnthortyTwo,jdbcType=INTEGER}, 
      #{roleAnthortyThree,jdbcType=INTEGER}, #{roleAnthortyFour,jdbcType=INTEGER}, #{roleAnthortyFive,jdbcType=INTEGER}, 
      #{roleAnthortySix,jdbcType=INTEGER}, #{roleAnthortySeven,jdbcType=INTEGER}, #{roleAnthortyEight,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guigu.instructional.po.RoleInfo" >
    insert into role_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="roleState != null" >
        role_state,
      </if>
      <if test="roleAnthortyOne != null" >
        role_anthorty_one,
      </if>
      <if test="roleAnthortyTwo != null" >
        role_anthorty_two,
      </if>
      <if test="roleAnthortyThree != null" >
        role_anthorty_three,
      </if>
      <if test="roleAnthortyFour != null" >
        role_anthorty_four,
      </if>
      <if test="roleAnthortyFive != null" >
        role_anthorty_five,
      </if>
      <if test="roleAnthortySix != null" >
        role_anthorty_six,
      </if>
      <if test="roleAnthortySeven != null" >
        role_anthorty_seven,
      </if>
      <if test="roleAnthortyEight != null" >
        role_anthorty_eight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleState != null" >
        #{roleState,jdbcType=VARCHAR},
      </if>
      <if test="roleAnthortyOne != null" >
        #{roleAnthortyOne,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyTwo != null" >
        #{roleAnthortyTwo,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyThree != null" >
        #{roleAnthortyThree,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyFour != null" >
        #{roleAnthortyFour,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyFive != null" >
        #{roleAnthortyFive,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortySix != null" >
        #{roleAnthortySix,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortySeven != null" >
        #{roleAnthortySeven,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyEight != null" >
        #{roleAnthortyEight,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guigu.instructional.po.RoleInfoExample" resultType="java.lang.Integer" >
    select count(*) from role_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update role_info
    <set >
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDesc != null" >
        role_desc = #{record.roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.roleState != null" >
        role_state = #{record.roleState,jdbcType=VARCHAR},
      </if>
      <if test="record.roleAnthortyOne != null" >
        role_anthorty_one = #{record.roleAnthortyOne,jdbcType=INTEGER},
      </if>
      <if test="record.roleAnthortyTwo != null" >
        role_anthorty_two = #{record.roleAnthortyTwo,jdbcType=INTEGER},
      </if>
      <if test="record.roleAnthortyThree != null" >
        role_anthorty_three = #{record.roleAnthortyThree,jdbcType=INTEGER},
      </if>
      <if test="record.roleAnthortyFour != null" >
        role_anthorty_four = #{record.roleAnthortyFour,jdbcType=INTEGER},
      </if>
      <if test="record.roleAnthortyFive != null" >
        role_anthorty_five = #{record.roleAnthortyFive,jdbcType=INTEGER},
      </if>
      <if test="record.roleAnthortySix != null" >
        role_anthorty_six = #{record.roleAnthortySix,jdbcType=INTEGER},
      </if>
      <if test="record.roleAnthortySeven != null" >
        role_anthorty_seven = #{record.roleAnthortySeven,jdbcType=INTEGER},
      </if>
      <if test="record.roleAnthortyEight != null" >
        role_anthorty_eight = #{record.roleAnthortyEight,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update role_info
    set role_id = #{record.roleId,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      role_desc = #{record.roleDesc,jdbcType=VARCHAR},
      role_state = #{record.roleState,jdbcType=VARCHAR},
      role_anthorty_one = #{record.roleAnthortyOne,jdbcType=INTEGER},
      role_anthorty_two = #{record.roleAnthortyTwo,jdbcType=INTEGER},
      role_anthorty_three = #{record.roleAnthortyThree,jdbcType=INTEGER},
      role_anthorty_four = #{record.roleAnthortyFour,jdbcType=INTEGER},
      role_anthorty_five = #{record.roleAnthortyFive,jdbcType=INTEGER},
      role_anthorty_six = #{record.roleAnthortySix,jdbcType=INTEGER},
      role_anthorty_seven = #{record.roleAnthortySeven,jdbcType=INTEGER},
      role_anthorty_eight = #{record.roleAnthortyEight,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guigu.instructional.po.RoleInfo" >
    update role_info
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleState != null" >
        role_state = #{roleState,jdbcType=VARCHAR},
      </if>
      <if test="roleAnthortyOne != null" >
        role_anthorty_one = #{roleAnthortyOne,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyTwo != null" >
        role_anthorty_two = #{roleAnthortyTwo,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyThree != null" >
        role_anthorty_three = #{roleAnthortyThree,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyFour != null" >
        role_anthorty_four = #{roleAnthortyFour,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyFive != null" >
        role_anthorty_five = #{roleAnthortyFive,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortySix != null" >
        role_anthorty_six = #{roleAnthortySix,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortySeven != null" >
        role_anthorty_seven = #{roleAnthortySeven,jdbcType=INTEGER},
      </if>
      <if test="roleAnthortyEight != null" >
        role_anthorty_eight = #{roleAnthortyEight,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guigu.instructional.po.RoleInfo" >
    update role_info
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_state = #{roleState,jdbcType=VARCHAR},
      role_anthorty_one = #{roleAnthortyOne,jdbcType=INTEGER},
      role_anthorty_two = #{roleAnthortyTwo,jdbcType=INTEGER},
      role_anthorty_three = #{roleAnthortyThree,jdbcType=INTEGER},
      role_anthorty_four = #{roleAnthortyFour,jdbcType=INTEGER},
      role_anthorty_five = #{roleAnthortyFive,jdbcType=INTEGER},
      role_anthorty_six = #{roleAnthortySix,jdbcType=INTEGER},
      role_anthorty_seven = #{roleAnthortySeven,jdbcType=INTEGER},
      role_anthorty_eight = #{roleAnthortyEight,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>